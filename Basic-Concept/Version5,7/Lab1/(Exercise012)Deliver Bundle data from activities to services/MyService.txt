package com.example.myapplication;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

public class MyService extends Service {
    private static final String TAG = "MyService";

    public MyService() {
    }

    @Override
    public void onCreate() {
        super.onCreate();

        Log.d(TAG,"onCreate");  //로그 출력을 위해서 첫 번째 파라미터로 태그 문자열을 전달해야 한다. (태그 문자열은 로그를 구별하는 역할을 한다.)
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        Log.d(TAG,"onStartCommand");

        if(intent == null){
            return Service.START_STICKY;    //Service.START_STICKY로 반환하면, 서비스가 비정상 종료되었을 때 시스템이 자동으로 재시작한다. (만약에 자동으로 재시작하지 않도록 만들고 싶다면 다른 상수를 사용하면 된다.)
        }else{
            processCommand(intent);
        }
        return super.onStartCommand(intent, flags, startId);
    }

    private void processCommand(Intent intent) {
        String command = intent.getStringExtra("command");
        String name = intent.getStringExtra("name");

        Log.d(TAG,"Command: " +command+", name: "+name);

        for(int i=0; i<5; i++){     //5초에 한번씩 로그를 출력하도록 한다.
            try{
                Thread.sleep(1000);
            }catch(Exception e){};
            Log.d(TAG,"Watting" + i + " seconds.");
        }

    }

    @Override
    public void onDestroy() {
        super.onDestroy();

    }

    @Override
    public IBinder onBind(Intent intent) {  //서비스 클래스는 다른 구성 요소와의 유기적으로 연결되도록 바인딩될 수 있는데 이를 위해 onBind()메소드를 재정의해야 한다. (여기서는 사용하는 바인딩 기능이 없으므로 추가하지 않는다.)
        // TODO: Return the communication channel to the service.
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
