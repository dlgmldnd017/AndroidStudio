※인플레이션

- XML 레이아웃에 정의된 내용이 메모리에 로딩된 후 객체화되는 과정을 말한다.

- 만약에 setContentView() 메소드 전에 버튼 객체와 버튼의 setOnClickListener를 만든다면, 오류가 발생하게 된다. 그 이유는 바로 메모리에 객체화되지
않은 버튼 객체를 참조하려고 했기 때문이다.


※ setContentView()의 역할

- 화면에 나타낼 뷰를 지정하는 역할을 한다.

- XML 레이아웃의 내용을 메모리에 객체화하는 역할을 한다.

- 만약에 부분 화면을 xml로 정의하여 보여준다고 하였을 때, setContentView()메소드를 사용하면 안된다. 그 이유는 setContentView()메소드는 화면 전체
를 설정하는 역할이므로 안된다.
	+ 별도의 인프레이션 객체를 사용해야한다.

	+ LayoutInflater를 사용하면 된다.

	+ getSystemService(Context.LAYOUT_INFLATER_SERVICE)
	
	+ 항상 실행되는 서비스이다.


※화면 구성과 화면 간 전환
- 대부분 하나의 엑티비티에서 다른 엑티비티만 띄운다면 startActivity(Intent)를 써도 되지만, 만약 우리가 하나를 띄우고 나서 다시 원래의 액티비티로 돌아
온다면 우리는 startActivityForResult(Intent intetnt, int requestCode)를 사용한다. 또한 이것을 사용하는 이유는 다시 돌아올 때 어떤 것으로부터 응답이
왔는지 구분할 필요가 있기 때문이다.

- 매니페스트에 엑티비티 태그안에 android:theme가 있는데, 이것은 화면 스타일이라고 할 수 있다.
	
	+ @style/Theme.AppCompat.Dialog 이 값은 액티비티가 대화 상자 형태로 나온다는 뜻이다.

- setResult()메소드는 button에 setOnClickListener메소드에서 넣을 수 있는데, 이것은 새로 띄운 액티비티에서 이전 엑티비티로 인텐트를 전달하고 싶을
때 사용되는 메소드로 호출할 때의 형식은 다음과 같다.
	
	+ setResult(응답 코드, 인텐트)

- onActivityResult() 메소드는 새로 띄웠던 메뉴 엑티비티가 응답을 오면서 그 응답을 처리하는 역할을 한다.

	+ protected void onActivityResult(int requestCode, int resultCode, Intent intent)


※인텐트
- 무언가 작업을 수행하기 위해 사용되는 일종의 명령 또는 데이터 전달 수단이 된다. 

- 인텐트는 자신이 만든 에플리케이션 구성 요소가 해야 할 일을 지정한다.

- android:content 패키지 안에 정의되어 있다.

- 다른 애플리케이션 구성 요소에 인텐트를 전달하는 대표적인 메소드는 다음과 같다.

	+ startActivity()

	+ startActivityForResult()

	+ startService()는 브로드 캐스팅을 수행할 때 사용된다.

	+ bindService()

	+ broadcastIntent()
	
	+ 이 과정에서 인텐트는 애플리케이션 실행 시에 에플리케이션 구성 요소 간에 전달되게 된다.

- 인턴테의 기본 구성 요소로는 '액션'과 '데이터'가 있는데, 액션은 수행할 기능, 데이터는 액션이 수행될 대상 데이터를 의미한다.

	+ 액션에는 대표적으로 ACTION_VIEW와 ACTION_EDIT 등이 있다.
	
	+ ACTION_EDIT, "content://contracts/people/2"는 전화번호부 데이터베이스에 있는 정보 중에서 ID값이 2인 정보를 편집하기 위한 화면을
	보여준다.

	+ ACTION_VIEW, "content://contracts/people"는 전화번호부 데이터베이스의 내용을 보여준다.





