※서비스

- 카카오톡처럼 채팅 앱이 실행되지 않아도 메세지가 오는 것은 화면 없이 백그라운드에서 실행되는 서비스가 있기 때문에 가능한 일이다.

- 새로 만든 서비스는 항상 매니페스트 파일에 등록해야 된다.

- 서비스를 실행시키고 싶다면, 메인 액티비티에서 startService() 메소드를 호출하면 된다.

- 서비스가 하는 중요한 역할은 단말이 항상 실행되어 있는 상태로 다른 단말과 데이터를 주고받거나 단말의 상태를 모니터링하는 것입니다.

	+ 따라서 서비스를 한번 실행해 두면 실행된 상태가 계속 유지되어야 한다. 

	+ 또는 비정상적으로 종료되더라도 시스템이 자동으로 재실행한다.

	+ 그래서 startService() 메소드를 여러 번 호출하여도 서비스 상태는 변화하지 않으므로, 서비스를 시작하는 목적보다 인텐트를 전달하는 목적
	으로 더 많이 쓰인다.

	+ 예를 들어, 액티비티에서 서비스 쪽으로 데이터를 전달하고 싶은 경우 인텐트 객체를 만들고 부가 데이터를 넣은 후, startService() 메소드를
	호출하면서 전달하면 된다. 

	+ 그런데 만약 서비스 객체가 메모리에 만들어져 있으면 onCreate() 메소드가 호출되지 않으므로 onStartCommand() 메소드를 사용해 전달
	받은 인텐트를 처리하게 된다.


- 서버에 데이터를 요청하고 응답을 기다리는 네트워킹 작업을 서비스로 분리하여 구현하면 사용자가 보는 화면과 관계없이 서버와 통신이 가능하다는
점을 이해해야 한다.


※브로드캐스트 수신자

- 브로드캐스팅이란 메시지를 여러 객체에게 전달하는 것을 말한다.

- 안드로이드는 여러 애플리케이션 구성 요소에게 메시지를 전달하고 싶은 경우 브로드캐스팅을 사용한다.

	+ 예를 들면, 다른 사람으로부터 SMS 문자를 받았을 때 이 문자를 다른 앱에 알려줄 필요가 있다면 브로드캐스팅으로 전달한다.

	+ 결국, 이런 메시지 전달 방식은 단말 전체에 적용될 수 있는데, 이를 '글로벌 이벤트' 라고 부른다.

- 단말 내의 다른 무언가로부터 특정 메시지를 받고 싶다면 브로드캐스트 수신자를 만들어 등록하면 된다.

	+ 브로드캐스트 수신자도 애플리케이션 구성 요소이므로 새로운 브로드캐스트 수신자를 만들게 되면 매니페스트 파일에 등록해야 시스템이 알 수 있다.

- 브로드캐스트 수신자는 그안에 onReceive() 메소드를 정의해야 하는데 이 메소드는 원하는 브로드캐스트 메시지가 도착하면 자동으로 호출한다.

	+ 그렇다면 수신하고 싶은 메시지의 종류는 어떻게 정의하냐면, 메시지는 인텐트 안에 넣어 전달되므로 수신하고 싶은 메시지가 있다면, 그 메시지는 인텐트 필터를 이용해 등록한다.

	+ 즉, 인텐트 필터를 사용해 시스템에 알려주어야 한다.







Q) 바인딩이란?

A)  프로그램 내에서 변수, 배열, 라벨, 절차 등의 명칭, 즉 식별자(identifier)가 그 대상인 메모리 주소, 데이터형 또는 실제값으로 배정되는 것이 이에 

해당되며, 원시 프로그램의 컴파일링 또는 링크 시에 확정되는 바인딩을 정적 바인딩(static binding)이라 하고, 프로그램의 실행되는 과정에서 바인딩

되는 것을 동적 바인딩(dynamic binding)이라고 한다.  프로그래밍에서는 바인딩을 가급적 뒤로 미루도록 권고하고 있다.


Q) putExtra() 메소드란?

A) 인텐트 객체의 메소드로, 키값과 value 값을 지정할 수 있다.


Q 만약에 sleep을 써서 5초동안 잠시 멈추게 하고싶다면, 어떤 형태로 써야될까?

A) Thread.sleep(5000);