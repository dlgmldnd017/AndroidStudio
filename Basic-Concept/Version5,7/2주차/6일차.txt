※ 프래그먼트 

- 하나의 화면을 여러 부분으로 나눠서 보여주거나 각각의 부분 화면 단위로 바꿔서 보여주고 싶을 때 사용하는 것이 프래그먼트이다.

- 프래그먼트는 태블릿처럼 큰 화면의 단말을 지원하려고 시작했는데, 지금은 단말의 크기와 상관없이 화면 UI를 만들 때 많이 사용된다.

- 액티비티처럼 독립적으로 동작하는 부분 화면을 만들 때 사용된다.

- 프래그먼트 사용 목적은 다음과 같다.

	+ 분할된 화면들을 독립적으로 구성하기 위해 사용한다.

	+ 분할된 화면들의 상태를 관리하기 위해 사용한다.


- 프래그먼트는 항상 액티비티 위에 올라가 있어야 한다는 점이다.

	+ 따라서 프래그먼트가 동작하는 시점은 프래그먼트가 메모리에 만들어진 시점이 아니라 액티비티에 올라가는 시점이다.

	+ 예1: 두 개의 액티비티) 액티비티#1 -> 인텐트 -> 액티비티#2

	+ 예2: 하나의 액티비티) 프래그먼트#1 -> 메서드 호출 -> 프래그먼트#2

	+ 예1은 안드로이드 시스템에서 액티비티 매니저가 관리하고, 예2는 액티비티에 프래그먼트 매니저가 관리하는다는 차이점이 있다.

	+ 예2를 보면 프래그먼트가 액티비티가 시스템 역할을 하게 되므로 액티비티 위에 올라가 있지 않은 프래그먼트는 정상적으로 동작할 수 없다는 것을 짐작 할 수 있다.

	+ 예1에서의 인텐트는 예2에서의 인텐트 역할을 수행하지 않는다. 그 이유는 인텐트는 시스템에서 이해하는 객체인데 그것을 프래그먼트와 액티비티 사이에서 전달하게 만드는 것은 바람직 하지 않기 때문이다.

	+ 또한 예2에서 두 개의 프래그먼트가 항상 액티비티 위에 올라가 있어야 할까? 그렇지는 않다. 하나의 프래그먼트만 올려도 된다.

	
- 특히 탭 모양으로 화면을 구성할 때 각각의 [탭] 버튼을 클릭할 때 마다 다른 화면이 보이는 효과를 내고 싶다면, 액티비티가 아닌 프래그먼트를 사용하는 것이 좋다.

- XML 레이아웃 파일의 내용을 인프레이션 후 클래스에서 사용하도록 하는 코드는 onCreateView() 메서드 안에 들어가게 된다.

	+ onCreateView() 메서드는 콜백 메서드로 인플레이션이 필요한 시점에 자동으로 호출된다.

	+ 따라서 이 메서드 안에서 인프레이션을 위한 inflate() 메서드를 호출하면 되고 인플레이션 과정이 끝나면 프래그먼트가 하나의 뷰처럼 동작할 수 있는 상태가 된다.